<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于我</title>
    <url>/2021/02/06/AboutMe/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>👦🏻 Zoxu</p>
<blockquote>
<p>A developer,live in Beijing,China</p>
</blockquote>
<img src="/images/AboutMe.jpeg" width="500" alt="zoxu" style="border-radius:50%">

<p>姓名：Zoxu<br>现居：北京市昌平区<br>家乡：河南省郑州市<br>就职于：JDCloud<br>email: <a href="mailto:&#x7a;&#x68;&#x6f;&#117;&#120;&#117;&#48;&#57;&#x32;&#56;&#x40;&#x31;&#50;&#54;&#46;&#99;&#x6f;&#109;">&#x7a;&#x68;&#x6f;&#117;&#120;&#117;&#48;&#57;&#x32;&#56;&#x40;&#x31;&#50;&#54;&#46;&#99;&#x6f;&#109;</a><br>WeChat: zhouxu_0928<br>爱好：旅行，机车，摄影，健身<br>技术栈：Java、Golang、Kubernetes</p>
]]></content>
      <categories>
        <category>我和她</category>
      </categories>
      <tags>
        <tag>关于我</tag>
      </tags>
  </entry>
  <entry>
    <title>新职场</title>
    <url>/2021/12/25/MoveToJDTBuilding/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>这周公司搬到了新的办公楼–京东科技大厦。<br>3年前的冬天，入职了京东，来到了北辰世纪中心，一转眼就3年过去了，数不清在北辰熬了多少个通宵😂，说实话挺舍不得这里的。<br>但是看到了新的办公楼，还是很开心啊。毕竟来到了中关村，大牛云集的地方，新的办公楼基础设施也更完善一些，可以每天晚上去撸铁啦。</p>
</blockquote>
<p>先来看看外景吧</p>
<img src="/2021/12/25/MoveToJDTBuilding/waijing.jpeg" class="" title="京东科技大厦">

<p>早上参加了剪裁仪式，见到了公司的各位大佬</p>
<img src="/2021/12/25/MoveToJDTBuilding/wushizi.jpeg" class="" title="剪裁仪式">

<p>然后吃了蛋糕呀，虽然到我手里就剩了渣渣了，不过还是沾沾喜气吧</p>
<img src="/2021/12/25/MoveToJDTBuilding/chidangao.jpeg" class="" title="大大的蛋糕">

<p>上楼收拾一下工位，工位旁边就是大大的落地窗，可以俯瞰中关村，比之前宽敞多啦</p>
<img src="/2021/12/25/MoveToJDTBuilding/bangongzhuo.jpeg" class="" title="工位">

<p>中午和同事一起去了新食堂，人山人海，不过新的食堂种类倒是挺多，味道也不错，中午给自己安排了个19元自选菜😂</p>
<img src="/2021/12/25/MoveToJDTBuilding/diyidunwucan.jpeg" class="" title="午餐">

<p>到了下午部门竟然给我们发了新的书包和衣服，瞬间有了一种开学第一天的感觉，虽然很…程序员吧，但是有总比没有强</p>
<img src="/2021/12/25/MoveToJDTBuilding/xinshubao.jpeg" class="" title="一眼就能看出来是程序员的书包">
<img src="/2021/12/25/MoveToJDTBuilding/xinyifu.jpeg" class="" title="带着公司logo的衣服">

<p>就介绍到这吧，新的职场新的开始，马上也要迎来新的一年，继续努力吧小周！！💪🏻</p>
]]></content>
      <categories>
        <category>小周的北漂生活</category>
      </categories>
      <tags>
        <tag>北漂生活</tag>
      </tags>
  </entry>
  <entry>
    <title>golang-map</title>
    <url>/2021/12/18/golang-map/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><h3 id="1-Map的Value赋值"><a href="#1-Map的Value赋值" class="headerlink" title="(1) Map的Value赋值"></a>(1) Map的Value赋值</h3><blockquote>
<p>下面代码编译会出现什么结果？</p>
</blockquote>
<blockquote>
<p>test7.go</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list <span class="keyword">map</span>[<span class="keyword">string</span>]Student</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	list = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Student)</span><br><span class="line"></span><br><span class="line">	student := Student&#123;<span class="string">&quot;Aceld&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">	list[<span class="string">&quot;student&quot;</span>] = student</span><br><span class="line">	list[<span class="string">&quot;student&quot;</span>].Name = <span class="string">&quot;LDB&quot;</span></span><br><span class="line"></span><br><span class="line">	fmt.Println(list[<span class="string">&quot;student&quot;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<p>编译失败，<code>./test7.go:18:23: cannot assign to struct field list[&quot;student&quot;].Name in map</code></p>
<p><strong>分析</strong></p>
<p><code>map[string]Student</code> 的value是一个Student结构值，所以当<code>list[&quot;student&quot;] = student</code>,是一个值拷贝过程。而<code>list[&quot;student&quot;]</code>则是一个值引用。那么值引用的特点是<code>只读</code>。所以对<code>list[&quot;student&quot;].Name = &quot;LDB&quot;</code>的修改是不允许的。</p>
<p><strong>方法一：</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list <span class="keyword">map</span>[<span class="keyword">string</span>]Student</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	list = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Student)</span><br><span class="line"></span><br><span class="line">	student := Student&#123;<span class="string">&quot;Aceld&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">	list[<span class="string">&quot;student&quot;</span>] = student</span><br><span class="line">	<span class="comment">//list[&quot;student&quot;].Name = &quot;LDB&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        方法1:</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    tmpStudent := list[<span class="string">&quot;student&quot;</span>]</span><br><span class="line">    tmpStudent.Name = <span class="string">&quot;LDB&quot;</span></span><br><span class="line">    list[<span class="string">&quot;student&quot;</span>] = tmpStudent</span><br><span class="line"></span><br><span class="line">	fmt.Println(list[<span class="string">&quot;student&quot;</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    方法1:</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">tmpStudent := list[<span class="string">&quot;student&quot;</span>]</span><br><span class="line">tmpStudent.Name = <span class="string">&quot;LDB&quot;</span></span><br><span class="line">list[<span class="string">&quot;student&quot;</span>] = tmpStudent</span><br></pre></td></tr></table></figure>

<p>是先做一次值拷贝，做出一个<code>tmpStudent副本</code>,然后修改该副本，然后再次发生一次值拷贝复制回去，<code>list[&quot;student&quot;] = tmpStudent</code>,但是这种会在整体过程中发生2次结构体值拷贝，性能很差。</p>
<span id="more"></span>
<p><strong>方法二</strong>：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list <span class="keyword">map</span>[<span class="keyword">string</span>]*Student</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	list = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*Student)</span><br><span class="line"></span><br><span class="line">	student := Student&#123;<span class="string">&quot;Aceld&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">	list[<span class="string">&quot;student&quot;</span>] = &amp;student</span><br><span class="line">	list[<span class="string">&quot;student&quot;</span>].Name = <span class="string">&quot;LDB&quot;</span></span><br><span class="line"></span><br><span class="line">	fmt.Println(list[<span class="string">&quot;student&quot;</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>我们将map的类型的value由Student值，改成Student指针。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> list <span class="keyword">map</span>[<span class="keyword">string</span>]*Student</span><br></pre></td></tr></table></figure>

<p>这样，我们实际上每次修改的都是指针所指向的Student空间，指针本身是常指针，不能修改，<code>只读</code>属性，但是指向的Student是可以随便修改的，而且这里并不需要值拷贝。只是一个指针的赋值。</p>
<h3 id="2-map的遍历赋值"><a href="#2-map的遍历赋值" class="headerlink" title="(2) map的遍历赋值"></a>(2) map的遍历赋值</h3><hr>
<blockquote>
<p>以下代码有什么问题，说明原因</p>
</blockquote>
<blockquote>
<p>test8.go</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">    Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//定义map</span></span><br><span class="line">    m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*student)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义student数组</span></span><br><span class="line">    stus := []student&#123;</span><br><span class="line">        &#123;Name: <span class="string">&quot;zhou&quot;</span>, Age: <span class="number">24</span>&#125;,</span><br><span class="line">        &#123;Name: <span class="string">&quot;li&quot;</span>, Age: <span class="number">23</span>&#125;,</span><br><span class="line">        &#123;Name: <span class="string">&quot;wang&quot;</span>, Age: <span class="number">22</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数组依次添加到map中</span></span><br><span class="line">    <span class="keyword">for</span> _, stu := <span class="keyword">range</span> stus &#123;</span><br><span class="line">        m[stu.Name] = &amp;stu</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印map</span></span><br><span class="line">    <span class="keyword">for</span> k,v := <span class="keyword">range</span> m &#123;</span><br><span class="line">        fmt.Println(k ,<span class="string">&quot;=&gt;&quot;</span>, v.Name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<p>遍历结果出现错误，输出结果为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zhou =&gt; wang</span><br><span class="line">li =&gt; wang</span><br><span class="line">wang =&gt; wang</span><br></pre></td></tr></table></figure>

<p>map中的3个key均指向数组中最后一个结构体。</p>
<p><strong>分析</strong></p>
<p>foreach中，stu是结构体的一个拷贝副本，所以<code>m[stu.Name]=&amp;stu</code>实际上一致指向同一个指针， 最终该指针的值为遍历的最后一个<code>struct的值拷贝</code>。 </p>
<!-- ![](images/109-foreach.jpeg) -->
<img src="/2021/12/18/golang-map/109-foreach.jpeg" class="" title="foreach">

<p><strong>正确写法</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">    Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//定义map</span></span><br><span class="line">    m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*student)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义student数组</span></span><br><span class="line">    stus := []student&#123;</span><br><span class="line">        &#123;Name: <span class="string">&quot;zhou&quot;</span>, Age: <span class="number">24</span>&#125;,</span><br><span class="line">        &#123;Name: <span class="string">&quot;li&quot;</span>, Age: <span class="number">23</span>&#125;,</span><br><span class="line">        &#123;Name: <span class="string">&quot;wang&quot;</span>, Age: <span class="number">22</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历结构体数组，依次赋值给map</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(stus); i++  &#123;</span><br><span class="line">        m[stus[i].Name] = &amp;stus[i]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印map</span></span><br><span class="line">    <span class="keyword">for</span> k,v := <span class="keyword">range</span> m &#123;</span><br><span class="line">        fmt.Println(k ,<span class="string">&quot;=&gt;&quot;</span>, v.Name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<!-- ![](images/110-foreach2.jpeg) -->
<img src="/2021/12/18/golang-map/110-foreach2.jpeg" class="" title="foreach2">

<p><strong>运行结果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zhou =&gt; zhou</span><br><span class="line">li =&gt; li</span><br><span class="line">wang =&gt; wang</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>技术笔记</category>
      </categories>
      <tags>
        <tag>golang-map</tag>
      </tags>
  </entry>
  <entry>
    <title>小仙女生气记录</title>
    <url>/2021/10/01/angry-record/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4e46751bea991dd469a8a2b13d8f6f2cc6d7122c2007e4614af066c4f39415f4">bb708e47e52e3bd7ae6e0a7057ab8e2f215507db890206875a7e2c1cb422e976ec58612545992cdc6a5e05001a9dee1b6e4a16895160372cac128c68d12812ad60b9313ef528e6ee5f66b8089c69ee3bd465a06b7f4b920102cb18818dcc351580516fc5fbb9c81181253e4a6a10d4c36b7200585af0a696fd912b4a95e7a36804d3e0d1060cb829ecfc20969fdce52dbfc6e229313583732fb58e5fea706b1f191c384802e6a84d4b6b2abc20f689134da146874a18fb5831bd543e8aab99db7cccacedb0467fb534b93fbb53023b366632dccd7e12875284a655c595b6451358b563163792a2f67bd301ba95436587b93a16ffbe8b079152377d7d17c004b065af0e0e0f2e7ba2fa890f1f6f78685f5bf238e25a4001babfdc139292661c5b80d035ebff63c4d7cab59b9b9730f3b75b094301ccd741c02c05a0a35c2469661b380f5f9987d06b1417a2f9b9c4a23cae3cd2991b3fda8a3ffa1be683d521e52707fe7e2e113cc8b082aa99b90917b09edf9c9a7cd6ec48d5c3244c8693501efe763da8df2decb14e15fbe28e78ef30e90fafd11e69850ea3fb74414e8ae8649d516af40175bec6f5f015f3413fc854f869198e3a03cdbfaa0384385682a510858a68f02f1296b6b5c1ef4364ca6d23decc846fdf28b324bc96d5c2ec3b65fbfd70d4e9f3699c4d46bb2834bedab85fde80418305348146a0c076833f1af8eef7d407cb780c0b0ddbdd3c6533879c49a0aed2a071d7a1decb9ca9a12e6a1d57c4062dada363479a75c60f20d01d1acf27ade2df92a65bd6e93de6a13547bea1d3b96dceeca32eae76d15c805f8235a3f9f1552d995747e27536d8b2b56cfbdf0bbab9068a43c33590c2ad04fdb4efb9103b78ce88d653025813e16848ab7b2ba00a6ea4d6b09c8094f26343893224636af611b6078edf501c0b03b2321f3230e8d82f0c9644fc50cb9418bf32c8d3be919c6007adaab6059b0458bfb7c236e6aa4ba198739d77c23e9f9423fc64858bc20c8314eb58f1fe71061a40e1443e6712c87bf29e58e8701cf491714fda2d7dfbd0889b82fd8efc1ffea52f988c27aff064a4613f06d0d350af552cc3aa5bfe5d63a177f263e8271c39a7c96319dcd0fef59d0a7cccf51c389fd06ec8a1b52c12c9101ac7187dd0c2a66352cce2ab1b3117000ab9d43333f260abe61efc8e7e0b76bf958782113b1441c41836639544617807f9d4f759fb98fa67fb23ec347bc7a97d66e1d94ce47478d38147733dd2ec2afda04b238f1b91de7b88a548a72067c8939f4a16fb7734ccf13bf4e17dbc94fa935846901b6cb05799fba2a72c9397c6e9cfd144d6ad4180799b8a50d5ae72dbb98f83ac69eb5085613e8135cde07eca868639026691689a153d471b0586dfa5d4ecec4419d553b7dd182c81504b6456d79fc39a52a9f654a2daeabab4d635308c0441e9fb5585ec073d8d03d283ac11f02101981691de32c6fdd560194180204c1fd3b9c0a6742955757654f4f1d3cc158919c0e4b770af0949ee8ee70d07ea2f59e8abad8b36ebdec734a26116d48d8a73746622b0d70aa31cafe9c9fbc50e463a78f7ce20272a523a83dae2965a95313dbaf7b6ce562137c2c2101ec02e5b5df92baf9a6cf0fb544644f6e6a45916722ef7c846fb4bf600a0fdf318579048146f4f2333a491f902813674a3122c5cb319815ca98e9c893688f7b0d6572318e9d664c06e037c37ddeceac3f6c79232722ba8f2c5c038bfa09e839518ae39bedadf01b941e92f212a0f264d02709f5a1042d6101190de7d1e0577a0040125c19d1e7335a4c51cd7e1edaf7e79043bf139e7507473c0226b2a5bfbcfae5fcd23a0cf5a76479b90b0c1bcfb1cc54c1b9066fec0ac7e96699ac12d38a5ab4e299e420873c4d5a158d6ce892b87645c80aa9083bb7d3adc170009bfec184d0f61ec1e728583dd2524c1e15c8bd16100834d64122cf96017a5104cc85ba831cf844ecc5141dcd3a3f0d7c092121f0d3d9d8f851589b6b72243e93ff7b20cdb37a7d842b217bb03942d6621b39cbaa58ced92ed1161fd5b2682cb4fe3dfe79e550cd040543ccca7e9d30d0eb95126ff8735bfdac0c1a437fe5747961c237e98db79750255ef7307a16f4a0c04266107e33a67788c4830dc35f05ae2cbad7ce95e87d7294f466df8561c4e06542e6e70823c04e67291243e2d63d975f1c6da5ab328675f7824d5da74ac22b25d5922e4cf262f3cc790b6bb726cb31b33813ee0650f8d00c03cc2273ec5b8f86c7465c523362c736e9053d62225287b1be7c0e4463dfd9157de731a338eaa4a2e5ed21b14fe9ea6e25a5eb47258716cd89e5480ebb0f3277c406d808ad9296932f1ca73ac6ac459265d6d6e51c691558158cea1fcb3409fcf34b8ed610b375240e5930e33de44940f6385a688ab605354d7d85718fd6f25397348fdf7e74985be0c4d41693055620999f614e04d590ac5b038c678c4735c28c6e8d97c0eb4603d5ee632f5d19a69cd28f9a3cb94986dd3c71fed5e8c0c48dbdb3c1f5b114fddb328534f76a94476874eb012ab0863829744314d517a0d0ee0073b5dd4ed1efcad8a6da201346a751f8600368cd9f2fd490f2579c8cc32f8b1cc23897cb7366461aa9fd63c915447098d03f00087d561e8e678775de5892daecf4b478c3e7492f6bd33a4c6db266c917f3c1b6e89909edb0c3cdd82844a0dd01b92e5cede83d7637a76b3280b9c404953e129c44a2cc552c62aa0b02852b03b7a0268c077766ecb21f6d24f30b67ce7ca624fb25955d82a00dbed5aeb52b13c841d384fc2982a03cb71044d73f8215a5803f285fb02f476342c05d0a242cd9744e0e113637c80a8d97a9dae2ceaea23a6bf4df6fbc0424cfe94b69cce3d4524f5075fb240c3925a7c02c840d911e31d9f75c4926888a0a9fe901b61792a4fd393a6f59fd2973bc3a686c89d259af70653dfc8911b8a5c1b0e8613b1fbd0610982c62c973142ae18db874dd0ec901696b95b8f68adf5545ef628062209f9cd386612ccdb75fb99cb684b4e701e595d6790b9a2555988868343df69391da8e29095caa533a9c0668b966089a3926f46070b79dc7bbcf83198572b0c4abedd73c9087276139fad56a130aaefd231d21d094c61f463aee3e299db9f13c5ba9783bd7aab67cf865ebb885960137c70b4d6ebadc32cd52fdd5da228984f59a262e4cc82d131285541869456757451a19e90a62e9db1e8cf77ca0d10c90c6149c882c77a5091fd34361bdeb124b1bd0dcb728d4121668695bf2dc6fe9c42ad3491b861c513b747dc8f8e972ccdeb5560292c8cc9bd60cc88669a7a2b631a4de372154dc100998178b767c85bf99560a0c98e8162f7ac509492d169938b0c0da251aaee8c42a3f38f8b2cff7db5f8cbb9473497faddbb9082dac262e00af88cfc4241abca036a36ca7a5773a204f050a96e85e4981fd4899f8cbf026fbe56a258c8b53fd6a372afc1fef5a717ac446f35b19f2a9d8e2d3951134fbfc7dab70f6fb033c6391437c582e18ce9b1af67aad5c4d1e9edcc2673a0579f4f2a5f438c00e2075dcb344765795fa2dadb87cc3d33d5c8234fdbdc45470f07ddf8f6b98aeb5939e148614bf7d3dbde3735daa6b4e6b6d55b3701abc4975e2b2e9fda042c827b8b620564623bd7879f0ebce04df1a00cb59184e30eb372fcfe99d094d0760a105b5d9514f68b6f468782f99ee3cbca8479810d455c29e9022cf26e78cffbdd59480700b9230ac0c50818fd40d6f4595f570c09ec6bcddc4628c25220d96ef0d5838f28def169c5cd64f99cd91d74</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>我和她</category>
      </categories>
      <tags>
        <tag>我和她</tag>
      </tags>
  </entry>
  <entry>
    <title>2021-05-01 宜昌游记</title>
    <url>/2021/06/05/yichang/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>
    <div id="aplayer-jLAZlTds" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="569214247" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"
    ></div>
<blockquote>
<p>2020年疫情之后就没怎么出去旅行过，这次旅行也是期待了很久。<br>出发之前想了很多地方，要么担心疫情要么受时间限制。<br>有一天，ZoSai说，我想喝武汉的排骨藕汤了，我说，走，咱们出发！</p>
</blockquote>
<h2 id="Day1-–武汉"><a href="#Day1-–武汉" class="headerlink" title="Day1 –武汉"></a>Day1 –武汉</h2><p>5月1号凌晨我们出发啦！经过5个小时驾车，我们到达了第一站，信阳师范学院，来接着妹妹，做个短暂的休息。</p>
<img src="/2021/06/05/yichang/xinyang1.jpeg" class="" title="信阳的早晨">
<img src="/2021/06/05/yichang/xinyang2.jpeg" class="" title="信阳的早晨">

<p>短暂休息过后继续出发，五一假期果然是很堵车啊，到了武汉都中午啦，直奔亢龙太子酒轩，有点遗憾的是排骨藕汤因为藕过了季节，都没有啦。带着但是来都来了，带着遗憾还是在他家吃了</p>
<img src="/2021/06/05/yichang/chide.jpeg" class="" title="各种吃吃吃">

<p>计划在武汉休整一天，然后去宜昌转转，于是下午就出门啦，去江边逛一逛，去吃一些小吃</p>
<img src="/2021/06/05/yichang/shapaozi.jpeg" class="" title="傻狍子-ZoSai">
<img src="/2021/06/05/yichang/qinglvzhuang.jpeg" class="" title="武汉地铁站">
<p>不知不觉天黑啦，我们也来到了武汉江滩</p>
<img src="/2021/06/05/yichang/wuhanjiangtan-1.jpeg" class="" title="江滩建筑">

<h2 id="Day2-–宜昌"><a href="#Day2-–宜昌" class="headerlink" title="Day2 –宜昌"></a>Day2 –宜昌</h2><h3 id="江边散步"><a href="#江边散步" class="headerlink" title="江边散步"></a>江边散步</h3><p>第二天一早就从武汉出发去往了宜昌，宜昌是一个生活节奏很慢的城市，在宜昌待的三天整个人都慢了下来，非常舒服</p>
<img src="/2021/06/05/yichang/jiangbian-1.jpeg" class="" title="宜昌江滩">
<p>江滩还用无人机拍了一小段视频~</p>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=205420506&bvid=BV1Bh411m7AL&cid=335880504&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>


<h3 id="把把烧"><a href="#把把烧" class="headerlink" title="把把烧"></a>把把烧</h3><p>宜昌非常有名的小吃把把烧 配上夺命大乌苏，绝绝子<br>对了，宜昌的萝卜饺子也特别好吃，还有什么鱼鱼，可惜光顾着吃了，忘记拍照啦</p>
<img src="/2021/06/05/yichang/babashao.jpeg" class="" title="把把烧">

<h2 id="Day3-–三峡人家"><a href="#Day3-–三峡人家" class="headerlink" title="Day3 –三峡人家"></a>Day3 –三峡人家</h2><p>第三天我们去了宜昌非常有名的三峡人家风景区，三峡人家位于长江夷陵峡上游，去的时候需要坐摆渡船，逆流而上。</p>
<img src="/2021/06/05/yichang/sanxiarenjia-1.jpeg" class="" title="去景区的船上，阴雨绵绵">
<img src="/2021/06/05/yichang/sanxiarenjia-2.jpeg" class="" title="景区码头">
<p>此情此景让我想到一首诗句<br>两岸猿声啼不住 轻舟已过万重山</p>
<img src="/2021/06/05/yichang/sanxiarenjia-3.jpeg" class="" title="一叶扁舟">

<p>进入景区内部，天气阴转晴，风景拍出来也更加美丽</p>
<img src="/2021/06/05/yichang/sanxiarenjia4.jpeg" class="" title="三峡人家">
<img src="/2021/06/05/yichang/yichang-1.jpeg" class="" title="三峡人家">
<img src="/2021/06/05/yichang/yichang-2.jpeg" class="" title="三峡人家">
<img src="/2021/06/05/yichang/yichang-3.jpeg" class="" title="三峡人家">
<p>游记的最后，用一个小短片总结一下吧~期待我们的下次旅行</p>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=592908430&bvid=BV1pq4y127BX&cid=479280797&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
</search>
